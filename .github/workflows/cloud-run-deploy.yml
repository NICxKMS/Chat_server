name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: chat-api
  REGION: asia-south1
  GAR_LOCATION: asia-south1
  REPOSITORY_NAME: chat-api-repo

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.Gcloud }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository
        run: |
          gcloud artifacts repositories create ${{ env.REPOSITORY_NAME }} \
            --repository-format=docker \
            --location=${{ env.GAR_LOCATION }} \
            --description="Docker repo for ${{ env.SERVICE_NAME }}" || echo "Exists"
        continue-on-error: true

      - name: Create Firebase Credentials Secret
        run: |
          echo '${{ secrets.Gcloud }}' > authkey.json
          gcloud secrets describe firebase-credentials --project ${{ env.PROJECT_ID }} || \
          gcloud secrets create firebase-credentials --data-file=authkey.json --project ${{ env.PROJECT_ID }}
        continue-on-error: true

      - name: Create env vars YAML file
        run: |
          echo "${{ secrets.ENV_VARS }}" > .env.tmp

          python <<EOF
import re, sys

with open('.env.tmp', 'r') as f:
    lines = f.read().splitlines()

yaml = []
for l in lines:
    if not l.strip() or l.strip().startswith('#'):
        continue
    k, v = l.split('=', 1)
    v = v.strip().strip('\'"')
    yaml.append(f"{k.strip()}: {v}")

with open('.env.yaml', 'w') as out:
    out.write('\n'.join(yaml))
EOF

      - name: Build & Push Docker image
        run: |
          gcloud builds submit . \
            --tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --project ${{ env.PROJECT_ID }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --env-vars-file .env.yaml \
            --set-env-vars="FIREBASE_CONFIG='${{ secrets.Gcloud }}',NODE_ENV=production" \
            --project ${{ env.PROJECT_ID }}
